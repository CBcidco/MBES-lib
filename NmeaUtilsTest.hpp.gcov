        -:    0:Source:test/NmeaUtilsTest.hpp
        -:    0:Graph:main.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:#ifndef NMEAUTILSTEST_HPP
        -:    2:#define NMEAUTILSTEST_HPP
        -:    3:
        -:    4:#include "catch.hpp"
        -:    5:#include "../src/utils/NmeaUtils.hpp"
        -:    6:
        -:    7:#define DOUBLE_PRECISION 0.0000000000001
        -:    8:
    #####:    9:TEST_CASE( "Extract height from GGK") {
    #####:   10:	std::string ggk("GPGGK,135900.907,090916,4822.32065998,N,00429.55086871,W,3,10,1.8,EHT50.886,M*55");
        -:   11:
    #####:   12:	double height=NmeaUtils::extractHeightFromGGK(ggk);
        -:   13:
    #####:   14:	REQUIRE(!std::isnan(height));
    #####:   15:	REQUIRE(abs(height - 50.886) < DOUBLE_PRECISION);
    #####:   16:}
        -:   17:
    #####:   18:TEST_CASE( "Extract height from invalid GGK") {
    #####:   19:        std::string ggk("I am the walrus");
        -:   20:
    #####:   21:        double height=NmeaUtils::extractHeightFromGGK(ggk);
        -:   22:
    #####:   23:        REQUIRE(std::isnan(height));
    #####:   24:}
        -:   25:
    #####:   26:TEST_CASE("Extract height from GGA"){
    #####:   27:	std::string gga("GPGGA,172814.0,3723.46587704,N,12202.26957864,W,2,6,1.2,18.893,M,-25.669,M,2.0,0031*4F");
        -:   28:
    #####:   29:        double height=NmeaUtils::extractHeightFromGGA(gga);
        -:   30:
    #####:   31:        REQUIRE(!std::isnan(height));
    #####:   32:        REQUIRE(abs(height - (-6.776)) < DOUBLE_PRECISION);
        -:   33:
    #####:   34:}
        -:   35:
    #####:   36:TEST_CASE( "Extract height from invalid GGA") {
    #####:   37:        std::string gga("I am the walrus");
        -:   38:
    #####:   39:        double height=NmeaUtils::extractHeightFromGGA(gga);
        -:   40:
    #####:   41:        REQUIRE(std::isnan(height));
    #####:   42:}
        -:   43:
        -:   44:
        -:   45:#endif
        -:   46:
